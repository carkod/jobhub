import wkhtmltopdf from 'wkhtmltopdf';
import moment from 'moment';
import path from 'path';

export default function generatePDF (url, req, data, printType, headerText) {
    //const url = req.protocol + '://' + req.get('host') + req.originalUrl;
let options, pdfURL;

    if (printType === 'q' || printType === 'f') {
        const footerURL = 'www.carloswu.xyz';
        const name = data.name.replace(/\s/g, '');;
        const position = data.cats.position;
        const updated = 'Updated ' + moment(data.updatedAt).year();
        const folder = path.join(__dirname, '../', '/docs');
        const uri = folder + `/CarlosWu-${name}(${printType}).pdf`;
        options = {
          output : uri,
          ignore: ['QFont::setPixelSize: Pixel size <= 0 (0)', 'QPainter::begin():'],
          headerRight : `${footerURL}`,
          footerRight: '[page]',
          headerLeft: `${headerText} - ${position}`,
          footerLeft: `${updated}`
        }
        
        pdfURL = {
            name: printType === 'q' ? 'Quick Version' : printType === 'f' ? 'Full Version' : printType === 'cl' ? 'Cover Letter default version' : '',
            value: printType,
            link: req.protocol + '://' + req.get('host') + `/docs/CarlosWu-${name}(${printType}).pdf`,
            
        }    
    } else if (printType === 'cl') {
        const footerURL = 'www.carloswu.xyz';
        const name = data.name.replace(/\s/g, '');;
        const updated = 'Updated ' + moment(data.updatedAt).year();
        const folder = path.join(__dirname, '../', '/docs');
        const uri = folder + `/CarlosWu-${name}(${printType}).pdf`;
        options = {
          output : uri,
          ignore: ['QFont::setPixelSize: Pixel size <= 0 (0)', 'QPainter::begin():'],
          headerRight : `${footerURL}`,
          footerRight: '[page]',
          footerLeft: `Generated by ${footerURL} - ${updated}`
        }
        
        pdfURL = {
            name: printType === 'q' ? 'Quick Version' : printType === 'f' ? 'Full Version' : printType === 'cl' ? 'Cover Letter default version' : '',
            value: printType,
            link: req.protocol + '://' + req.get('host') + `/docs/CarlosWu-${name}(${printType}).pdf`,
            
        }    
    }
    
   
    return new Promise((ok,fail) => {
        wkhtmltopdf(url, options, (err) => {
            if (err) {
                
                fail(err);
            } else {
                ok(pdfURL);        
            }
            
        });
    });
    
}